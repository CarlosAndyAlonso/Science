import { useState, useEffect } from "react";
import { CheckCircle, Clock, Loader2 } from "lucide-react";
import { Progress } from "@/components/ui/progress";

const steps = [
  { id: 1, name: "Analyzing content brief", duration: 2000 },
  { id: 2, name: "Processing images", duration: 3000 },
  { id: 3, name: "Generating platform-specific content", duration: 4000 },
  { id: 4, name: "Optimizing for engagement", duration: 2000 },
];

export default function ProgressTracker() {
  const [currentStep, setCurrentStep] = useState(0);
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    let totalDuration = 0;
    let currentTime = 0;

    const intervals: NodeJS.Timeout[] = [];

    steps.forEach((step, index) => {
      totalDuration += step.duration;
      
      const timeout = setTimeout(() => {
        setCurrentStep(index + 1);
      }, currentTime);
      
      intervals.push(timeout);
      currentTime += step.duration;
    });

    // Progress animation
    const progressInterval = setInterval(() => {
      setProgress((prev) => {
        if (prev >= 100) return 100;
        return prev + (100 / (totalDuration / 100));
      });
    }, 100);

    intervals.push(progressInterval);

    return () => {
      intervals.forEach(clearTimeout);
      clearInterval(progressInterval);
    };
  }, []);

  const getStepIcon = (stepIndex: number) => {
    if (stepIndex < currentStep) {
      return <CheckCircle className="h-4 w-4 text-emerald-500" />;
    } else if (stepIndex === currentStep) {
      return <Loader2 className="h-4 w-4 text-primary animate-spin" />;
    } else {
      return <Clock className="h-4 w-4 text-neutral-400" />;
    }
  };

  return (
    <div className="bg-white rounded-xl p-6 border border-neutral-200">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-semibold text-neutral-800">Generating Content</h3>
        <div className="flex items-center space-x-2">
          <div className="w-2 h-2 bg-primary rounded-full animate-pulse" />
          <span className="text-sm text-neutral-600">AI Processing</span>
        </div>
      </div>
      
      <div className="space-y-4 mb-6">
        {steps.map((step, index) => (
          <div key={step.id} className="flex items-center justify-between">
            <span 
              className={`text-sm ${
                index < currentStep 
                  ? "text-neutral-800" 
                  : index === currentStep 
                    ? "text-primary font-medium" 
                    : "text-neutral-400"
              }`}
            >
              {step.name}
            </span>
            {getStepIcon(index)}
          </div>
        ))}
      </div>
      
      <div>
        <Progress value={progress} className="mb-2" />
        <p className="text-sm text-neutral-600">
          {Math.round(progress)}% complete - Estimated {Math.max(0, Math.round((100 - progress) * 0.12))} seconds remaining
        </p>
      </div>